#ifndef _LS_NET_SDK_H_
#define _LS_NET_SDK_H_
 
//////////////////////////////////////////////////////////////////////////
// ???????????
//////////////////////////////////////////////////////////////////////////
#define  __u8        unsigned char
#define	 __u16   	 unsigned short
#define  __u32       unsigned long
//????????
//??????????
#define MAX_SUPPORT_IPC					128		//SDK??????????????
#define SERIALNO_LEN					48      //???§Ü????
#define NAME_LEN						32      //?????????
#define MACADDR_LEN						6       //mac???????
#define MAX_LICENSE_LEN					16		//??????????
#define MAX_AUDIO						1       //???????????
#define MAX_USERNUM						16		//???????????
#define MAX_REALVIEW					4		//?????????¡¤??
#define MAX_ALARMNUM					1		//????????????¡¤??
#define MAC_LENGTH			        	6 		///< Length of MAC address.
#define OSDTEXTLEN			        	24
#define MAX_INTERVAL_NUM 			    2
#define MAX_CHANNUM						64
#define MAX_ALARMOUT					96
#define MAX_ALARMIN						160

/*******************???????? begin**********************/	
#define NET_SDK_NOERROR 					0	//??§Õ???
#define NET_SDK_PASSWORD_ERROR 				1	//????????????
#define NET_SDK_NOENOUGHPRI 				2	//??????
#define NET_SDK_NOINIT 						3	//??§Ô????
#define NET_SDK_CHANNEL_ERROR 				4	//????????
#define NET_SDK_OVER_MAXLINK 				5	//?????DVR????????????????
#define NET_SDK_VERSIONNOMATCH				6	//?·Ú?????
#define NET_SDK_NETWORK_FAIL_CONNECT		7	//????????????
#define NET_SDK_NETWORK_SEND_ERROR			8	//????????????
#define NET_SDK_NETWORK_RECV_ERROR			9	//????????????????
#define NET_SDK_NETWORK_RECV_TIMEOUT		10	//???????????????
#define NET_SDK_NETWORK_ERRORDATA			11	//?????????????
#define NET_SDK_ORDER_ERROR					12	//??????????
#define NET_SDK_OPERNOPERMIT				13	//??????
#define NET_SDK_COMMANDTIMEOUT				14	//DVR??????§Ô??
#define NET_SDK_ERRORSERIALPORT				15	//????????
#define NET_SDK_ERRORALARMPORT				16	//??????????
#define NET_SDK_PARAMETER_ERROR 			17  //????????
#define NET_SDK_CHAN_EXCEPTION				18	//??????????????????
#define NET_SDK_NODISK						19	//??????
#define NET_SDK_ERRORDISKNUM				20	//???????
#define NET_SDK_DISK_FULL					21	//???????????
#define NET_SDK_DISK_ERROR					22	//????????????
#define NET_SDK_NOSUPPORT					23	//???????????
#define NET_SDK_BUSY						24	//???????
#define NET_SDK_MODIFY_FAIL					25	//?????????????
#define NET_SDK_PASSWORD_FORMAT_ERROR		26	//???????????????
#define NET_SDK_DISK_FORMATING				27	//????????????????????????
#define NET_SDK_DVRNORESOURCE				28	//DVR???????
#define	NET_SDK_DVROPRATEFAILED				29  //DVR???????
#define NET_SDK_OPENHOSTSOUND_FAIL 			30  //??PC???????
#define NET_SDK_DVRVOICEOPENED 				31  //?????????????????
#define	NET_SDK_TIMEINPUTERROR				32  //??????????
#define	NET_SDK_NOSPECFILE					33  //?????????????????????
#define NET_SDK_CREATEFILE_ERROR			34	//???????????
#define	NET_SDK_FILEOPENFAIL				35  //?????????
#define	NET_SDK_OPERNOTFINISH				36  //??¦Å????????????
#define	NET_SDK_GETPLAYTIMEFAIL				37  //?????????????????
#define	NET_SDK_PLAYFAIL					38  //???????
#define NET_SDK_FILEFORMAT_ERROR			39  //???????????
#define NET_SDK_DIR_ERROR					40	//¡¤??????
#define NET_SDK_ALLOC_RESOURCE_ERROR		41  //??????????
#define NET_SDK_AUDIO_MODE_ERROR			42	//??????????
#define NET_SDK_NOENOUGH_BUF				43	//???????§³
#define NET_SDK_CREATESOCKET_ERROR		 	44	//????SOCKET????
#define NET_SDK_SETSOCKET_ERROR				45	//????SOCKET????
#define NET_SDK_MAX_NUM						46	//?????????
#define NET_SDK_USERNOTEXIST				47	//?????????
#define NET_SDK_WRITEFLASHERROR				48  //§ÕFLASH????
#define NET_SDK_UPGRADEFAIL					49  //DVR???????
#define NET_SDK_CARDHAVEINIT				50  //??????????????
#define NET_SDK_PLAYERFAILED				51	//???¨°????????????????
#define NET_SDK_MAX_USERNUM					52  //?õô????????????
#define NET_SDK_GETLOCALIPANDMACFAIL		53  //????????IP??????????????
#define NET_SDK_NOENCODEING					54	//???????§Ò???
#define NET_SDK_IPMISMATCH					55	//IP????????
#define NET_SDK_MACMISMATCH					56	//MAC????????
#define NET_SDK_UPGRADELANGMISMATCH			57	//???????????????
#define NET_SDK_MAX_PLAYERPORT				58	//??????¡¤???????
#define NET_SDK_NOSPACEBACKUP				59	//?????õô????????????§Ò???
#define NET_SDK_NODEVICEBACKUP				60	//???????????????õô
#define NET_SDK_PICTURE_BITS_ERROR			61	//?????¦Ë??????????24?
#define NET_SDK_PICTURE_DIMENSION_ERROR		62	//????*?????? ??128*256
#define NET_SDK_PICTURE_SIZ_ERROR			63	//????§³???????100K
#define NET_SDK_LOADPLAYERSDKFAILED			64	//?????????Player Sdk????
#define NET_SDK_LOADPLAYERSDKPROC_ERROR		65	//?????Player Sdk????????????
#define NET_SDK_LOADDSSDKFAILED				66	//?????????DSsdk????
#define NET_SDK_LOADDSSDKPROC_ERROR		    67	//?????DsSdk????????????
#define NET_SDK_DSSDK_ERROR					68	//??????????DsSdk????????????
#define NET_SDK_VOICEMONOPOLIZE				69	//?????????
#define NET_SDK_JOINMULTICASTFAILED			70	//??????????
#define NET_SDK_CREATEDIR_ERROR				71	//???????????????
#define NET_SDK_BINDSOCKET_ERROR			72	//??????????
#define NET_SDK_SOCKETCLOSE_ERROR			73	//socket?????§Ø?????????????????????§Ø??????????
#define NET_SDK_USERID_ISUSING			    74	//???????ID????????????
#define NET_SDK_SOCKETLISTEN_ERROR			75	//???????
#define NET_SDK_PROGRAM_EXCEPTION			76	//??????
#define NET_SDK_WRITEFILE_FAILED			77	//§Õ??????
#define NET_SDK_FORMAT_READONLY				78  //??????????????
#define NET_SDK_WITHSAMEUSERNAME		    79  //??????y??§Õ?????????????
#define NET_SDK_DEVICETYPE_ERROR            80  //?????????õô???????
#define NET_SDK_LANGUAGE_ERROR              81  //????????????????
#define NET_SDK_PARAVERSION_ERROR           82  //????????????·Ú?????
#define NET_SDK_IPCHAN_NOTALIVE             83  //???????IP?????????
#define NET_SDK_RTSP_SDK_ERROR				84	//???????IPC????StreamTransClient.dll???
#define NET_SDK_CONVERT_SDK_ERROR			85	//???????????
#define NET_SDK_IPC_COUNT_OVERFLOW			86  //????????ip?????????
#define NET_SDK_MAX_ADD_NUM                 87	//?????(?????????64)??????????
#define NET_SDK_PARAMMODE_ERROR             88	//????????????????????????????????????????????????????????
#define NET_SDK_CODESPITTER_OFFLINE			89	//?????????????????????
#define NET_SDK_BACKUP_COPYING				90  //?õô???????
#define NET_SDK_CHAN_NOTSUPPORT             91  //????????¨°???
#define NET_SDK_CALLINEINVALID              92  //?????¦Ë??????§Ý??????????§Ò 
#define NET_SDK_CALCANCELCONFLICT           93  //??????????????????????????????§³??????
#define NET_SDK_CALPOINTOUTRANGE            94 	//????????¦¶ 
#define NET_SDK_FILTERRECTINVALID           95  //?????????????????
#define NET_SDK_DDNS_DEVOFFLINE             96  //?õô??????ddns??
#define NET_SDK_DDNS_INTER_ERROR            97  //DDNS ?????????????
#define NET_SDK_FUNCTION_NOT_SUPPORT_OS		98	//?????????¨°?????
#define NET_SDK_ALIAS_DUPLICATE				150	//???????(??????????????§Ü????????õô???¡ã·Úddns??????)


//????????? 
#define VCA_ERROR_INDEX                     300 //?????????????
#define NET_SDK_ID_ERROR                    (VCA_ERROR_INDEX + 0)   //????ID??????
#define NET_SDK_POLYGON_ERROR               (VCA_ERROR_INDEX + 1)   //????¦Â????????
#define NET_SDK_RULE_PARAM_ERROR            (VCA_ERROR_INDEX + 2)   //?????????????
#define NET_SDK_RULE_CFG_CONFLICT           (VCA_ERROR_INDEX + 3)   //??????????
#define NET_SDK_CALIBRATE_NOT_READY         (VCA_ERROR_INDEX + 4)   //?????§Ò????
#define NET_SDK_CAMERA_DATA_ERROR           (VCA_ERROR_INDEX + 5)   //???????????????
#define NET_SDK_CALIBRATE_DATA_UNFIT        (VCA_ERROR_INDEX + 6)	//?????????§Ò?????????
#define NET_SDK_CALIBRATE_DATA_CONFLICT     (VCA_ERROR_INDEX + 7)	//?????????????§Ö??????¦Ë???????
#define NET_SDK_CALIBRATE_CALC_FAIL         (VCA_ERROR_INDEX + 8)	//???????????????????
#define	NET_SDK_CALIBRATE_LINE_OUT_RECT		(VCA_ERROR_INDEX + 9)	//???????????????????????????¦Ï?
#define NET_SDK_ENTER_RULE_NOT_READY		(VCA_ERROR_INDEX + 10)	//??????y???????
#define NET_SDK_AID_RULE_NO_INCLUDE_LANE	(VCA_ERROR_INDEX + 11)	//??????????????§Ñ??????????????o????§µ?
#define NET_SDK_LANE_NOT_READY				(VCA_ERROR_INDEX + 12)	//?????????¨®???
#define NET_SDK_RULE_INCLUDE_TWO_WAY		(VCA_ERROR_INDEX + 13)	//????????§Ñ???2????????
#define NET_SDK_LANE_TPS_RULE_CONFLICT      (VCA_ERROR_INDEX + 14)  //???????????????
#define NET_SDK_NOT_SUPPORT_EVENT_TYPE      (VCA_ERROR_INDEX + 15)  //?????????????
#define NET_SDK_LANE_NO_WAY                 (VCA_ERROR_INDEX + 16)  //??????§Ù???
#define NET_SDK_SIZE_FILTER_ERROR           (VCA_ERROR_INDEX + 17)  //???????????
#define NET_SDK_LIB_FFL_NO_FACE             (VCA_ERROR_INDEX + 18)	//??????¦Ë????????????????
#define NET_SDK_LIB_FFL_IMG_TOO_SMALL       (VCA_ERROR_INDEX + 19)	//??????¦Ë??????????§³
#define NET_SDK_LIB_FD_IMG_NO_FACE          (VCA_ERROR_INDEX + 20)	//??????????????????????????????
#define NET_SDK_LIB_FACE_TOO_SMALL          (VCA_ERROR_INDEX + 21)	//?????????§³
#define NET_SDK_LIB_FACE_QUALITY_TOO_BAD    (VCA_ERROR_INDEX + 22)	//??????????????????
#define NET_SDK_KEY_PARAM_ERR               (VCA_ERROR_INDEX + 23)	//??????????????
#define NET_SDK_CALIBRATE_DATA_ERR          (VCA_ERROR_INDEX + 24)	//???????????????????????????????????????
#define NET_SDK_CALIBRATE_DISABLE_FAIL      (VCA_ERROR_INDEX + 25)	//?????¨´????????????
#define NET_SDK_VCA_LIB_FD_SCALE_OUTRANGE   (VCA_ERROR_INDEX + 26)	//????????????§³???????§³????????????????????
#define NET_SDK_LIB_FD_REGION_TOO_LARGE     (VCA_ERROR_INDEX + 27)	//??????????¦¶?????????????????2/3


#define NET_SDK_RTSP_ERROR_NOENOUGHPRI          401  //????????????????401???????????????

#define NET_SDK_RTSP_ERROR_ALLOC_RESOURCE      402  //??????????
#define NET_SDK_RTSP_ERROR_PARAMETER               403  //????????

#define NET_SDK_RTSP_ERROR_FORCE_STOP              406  //????????????

#define NET_SDK_RTSP_GETPORTFAILED			    407  //rtsp ?????????
#define NET_SDK_RTSP_DESCRIBERROR			    410  //rtsp decribe ????????
#define NET_SDK_RTSP_DESCRIBESENDTIMEOUT		411  //rtsp decribe ??????
#define NET_SDK_RTSP_DESCRIBESENDERROR			412  //rtsp decribe ???????
#define NET_SDK_RTSP_DESCRIBERECVTIMEOUT		413  //rtsp decribe ??????
#define NET_SDK_RTSP_DESCRIBERECVDATALOST		414  //rtsp decribe ???????????
#define NET_SDK_RTSP_DESCRIBERECVERROR			415  //rtsp decribe ???????
#define NET_SDK_RTSP_DESCRIBESERVERERR			416  //rtsp decribe ??????????401:????????????????????,???? 501:?õô????????????? 

#define NET_SDK_RTSP_SETUPSENDTIMEOUT			421  //rtsp setup ??????
#define NET_SDK_RTSP_SETUPSENDERROR				422  //rtsp setup ???????
#define NET_SDK_RTSP_SETUPRECVTIMEOUT			423  //rtsp setup ??????
#define NET_SDK_RTSP_SETUPRECVDATALOST			424  //rtsp setup ???????????
#define NET_SDK_RTSP_SETUPRECVERROR				425  //rtsp setup ???????
#define NET_SDK_RTSP_OVER_MAX_CHAN				426  //rtsp setup ??????????401,501?????,?????????????

#define NET_SDK_RTSP_PLAYSENDTIMEOUT			431  //rtsp play ??????
#define NET_SDK_RTSP_PLAYSENDERROR				432  //rtsp play ???????
#define NET_SDK_RTSP_PLAYRECVTIMEOUT			433  //rtsp play ??????
#define NET_SDK_RTSP_PLAYRECVDATALOST			434  //rtsp play ???????????
#define NET_SDK_RTSP_PLAYRECVERROR				435  //rtsp play ???????
#define NET_SDK_RTSP_PLAYSERVERERR				436  //rtsp play ??????????401,501?????

#define NET_SDK_RTSP_TEARDOWNSENDTIMEOUT		441  //rtsp teardown ??????
#define NET_SDK_RTSP_TEARDOWNSENDERROR			442  //rtsp teardown ???????
#define NET_SDK_RTSP_TEARDOWNRECVTIMEOUT		443  //rtsp teardown ??????
#define NET_SDK_RTSP_TEARDOWNRECVDATALOST		444  //rtsp teardown ???????????
#define NET_SDK_RTSP_TEARDOWNRECVERROR			445  //rtsp teardown ???????
#define NET_SDK_RTSP_TEARDOWNSERVERERR			446  //rtsp teardown ??????????401,501?????

#define  NET_PLAYM4_NOERROR					    500	//no error
#define	 NET_PLAYM4_PARA_OVER				    501	//input parameter is invalid;
#define  NET_PLAYM4_ORDER_ERROR				    502	//The order of the function to be called is error.
#define	 NET_PLAYM4_TIMER_ERROR				    503	//Create multimedia clock failed;
#define  NET_PLAYM4_DEC_VIDEO_ERROR			    504	//Decode video data failed.
#define  NET_PLAYM4_DEC_AUDIO_ERROR			    505	//Decode audio data failed.
#define	 NET_PLAYM4_ALLOC_MEMORY_ERROR		    506	//Allocate memory failed.
#define  NET_PLAYM4_OPEN_FILE_ERROR			    507	//Open the file failed.
#define  NET_PLAYM4_CREATE_OBJ_ERROR		    508	//Create thread or event failed
#define  NET_PLAYM4_CREATE_DDRAW_ERROR		    509	//Create DirectDraw object failed.
#define  NET_PLAYM4_CREATE_OFFSCREEN_ERROR      510	//failed when creating off-screen surface.
#define  NET_PLAYM4_BUF_OVER			        511	//buffer is overflow
#define  NET_PLAYM4_CREATE_SOUND_ERROR	        512	//failed when creating audio device.	
#define	 NET_PLAYM4_SET_VOLUME_ERROR	        513	//Set volume failed
#define  NET_PLAYM4_SUPPORT_FILE_ONLY	        514	//The function only support play file.
#define  NET_PLAYM4_SUPPORT_STREAM_ONLY	        515	//The function only support play stream.
#define  NET_PLAYM4_SYS_NOT_SUPPORT		        516	//System not support.
#define  NET_PLAYM4_FILEHEADER_UNKNOWN          517	//No file header.
#define  NET_PLAYM4_VERSION_INCORRECT	        518	//The version of decoder and encoder is not adapted.  
#define  NET_PALYM4_INIT_DECODER_ERROR          519	//Initialize decoder failed.
#define  NET_PLAYM4_CHECK_FILE_ERROR	        520	//The file data is unknown.
#define  NET_PLAYM4_INIT_TIMER_ERROR	        521	//Initialize multimedia clock failed.
#define	 NET_PLAYM4_BLT_ERROR			        522	//Blt failed.
#define  NET_PLAYM4_UPDATE_ERROR		        523	//Update failed.
#define  NET_PLAYM4_OPEN_FILE_ERROR_MULTI       524   //openfile error, streamtype is multi
#define  NET_PLAYM4_OPEN_FILE_ERROR_VIDEO       525   //openfile error, streamtype is video
#define  NET_PLAYM4_JPEG_COMPRESS_ERROR         526   //JPEG compress error
#define  NET_PLAYM4_EXTRACT_NOT_SUPPORT         527	//Don't support the version of this file.
#define  NET_PLAYM4_EXTRACT_DATA_ERROR          528	//extract video data failed.

#define NET_QOS_OK								 700					//no error
#define NET_QOS_ERROR							 (NET_QOS_OK - 1)		//qos error
#define NET_QOS_ERR_INVALID_ARGUMENTS			 (NET_QOS_OK - 2)		//invalid arguments 
#define NET_QOS_ERR_SESSION_NOT_FOUND			 (NET_QOS_OK - 3)		//session net found
#define NET_QOS_ERR_LIB_NOT_INITIALIZED          (NET_QOS_OK - 4)		//lib not initialized
#define NET_QOS_ERR_OUTOFMEM                     (NET_QOS_OK - 5)		//outtofmem
#define NET_QOS_ERR_PACKET_UNKNOW                (NET_QOS_OK - 10)		//packet unknow
#define NET_QOS_ERR_PACKET_VERSION               (NET_QOS_OK - 11)		//packet version error
#define NET_QOS_ERR_PACKET_LENGTH                (NET_QOS_OK - 12)		//packet length error
#define NET_QOS_ERR_PACKET_TOO_BIG               (NET_QOS_OK - 13)		//packet too big
#define NET_QOS_ERR_SCHEDPARAMS_INVALID_BANDWIDTH (NET_QOS_OK - 20)		//schedparams invalid bandwidth
#define NET_QOS_ERR_SCHEDPARAMS_BAD_FRACTION      (NET_QOS_OK - 21)		//schedparams bad fraction
#define NET_QOS_ERR_SCHEDPARAMS_BAD_MINIMUM_INTERVAL (NET_QOS_OK - 22)	//schedparams bad minimum interval

#define NET_SDK_DEV_NET_OVERFLOW		            800	//?????????????õô????????
#define NET_SDK_STATUS_RECORDFILE_WRITING_NOT_LOCK  801 //???????????????????? 
#define NET_SDK_STATUS_CANT_FORMAT_LITTLE_DISK      802 //????????§³????????
/*******************???????? end**********************/

/*************************???????????? begin*******************************/
//????NET_GetConfig??NET_SetConfig,????????????y?

#define NET_SDK_GET_DEVICECFG		100		//????õô????
#define NET_SDK_SET_DEVICECFG		101		//?????õô????
#define NET_SDK_GET_NETCFG			102		//??????????
#define NET_SDK_SET_NETCFG			103		//???????????
#define NET_SDK_GET_PICCFG			104		//?????????
#define NET_SDK_SET_PICCFG			105		//??????????
#define NET_SDK_GET_COMPRESSCFG		106		//??????????
#define NET_SDK_SET_COMPRESSCFG		107		//???????????
#define NET_SDK_GET_RECORDCFG		108		//????????????
#define NET_SDK_SET_RECORDCFG		109		//?????????????
#define NET_SDK_GET_DECODERCFG		110		//?????????????
#define NET_SDK_SET_DECODERCFG		111		//???y?????????
#define NET_SDK_GET_RS232CFG 		112		//???232???????
#define NET_SDK_SET_RS232CFG		113		//????232???????
#define NET_SDK_GET_ALARMINCFG 		114		//??????????????
#define NET_SDK_SET_ALARMINCFG		115		//??????????????
#define NET_SDK_GET_ALARMOUTCFG 	116		//??????????????
#define NET_SDK_SET_ALARMOUTCFG		117		//??????????????
#define NET_SDK_GET_TIMECFG 		118		//???DVR???
#define NET_SDK_SET_TIMECFG			119		//????DVR???
#define NET_SDK_GET_PREVIEWCFG 		120		//??????????
#define NET_SDK_SET_PREVIEWCFG		121		//???????????
#define NET_SDK_GET_VIDEOOUTCFG 	122		//?????????????
#define NET_SDK_SET_VIDEOOUTCFG		123		//??????????????
#define NET_SDK_GET_USERCFG 		124		//??????????
#define NET_SDK_SET_USERCFG			125		//???????????
#define NET_SDK_GET_EXCEPTIONCFG 	126		//?????????
#define NET_SDK_SET_EXCEPTIONCFG	127		//??????????
#define NET_SDK_GET_ZONEANDDST		128		//????????????????
#define NET_SDK_SET_ZONEANDDST		129		//?????????????????
#define NET_SDK_GET_SHOWSTRING		130		//??????????????
#define NET_SDK_SET_SHOWSTRING		131		//??????????????
#define NET_SDK_GET_EVENTCOMPCFG	132		//????????????????
#define NET_SDK_SET_EVENTCOMPCFG	133		//?????????????????
#define NET_SDK_GET_FTPCFG			134		//???????FTP????(????)
#define NET_SDK_SET_FTPCFG			135		//????????FTP????(????)
#define NET_SDK_GET_AUXOUTCFG		140		//??????????????????????(HS?õô???????2006-02-28)
#define NET_SDK_SET_AUXOUTCFG		141		//??????????????????????(HS?õô???????2006-02-28)
#define NET_SDK_GET_PREVIEWCFG_AUX 	142		//???-s??????????????(-s???????2006-04-13)
#define NET_SDK_SET_PREVIEWCFG_AUX	143		//????-s??????????????(-s???????2006-04-13)


/************************************************************************/
/* ??????????       
//Bit¦Ë	??????	6	5	4	3	2	1	0
//???	??????	?????????Ó	?????????????Ó	?????????????Ó	????????????Ó	??????IP???????Ó	??????????????Ó	???????? */
/************************************************************************/


#define ALARM_UPLOAD_PICTURE   1<<0
#define	ALARM_UPLOAD_DISCONNECT   1<<1
#define	ALARM_UPLOAD_IP_CONFLICT  1<<2
#define	ALARM_UPLOAD_TEMPERATURE  1<<3
#define	ALARM_UPLOAD_VEDIO_VAGUE  1<<4
#define ALARM_UPLOAD_VEDIO_BLOCK  1<<5
#define ALARM_UPLOAD_EXTERN      1<<6


/************************************************************************/
/* ?Ó??????                                            */
/************************************************************************/

#define    SDK_REPORT_ALARM_LOSTNETWORK			1	//alarmID
#define    SDK_REPORT_ALARM_IPCONFLICT			2	//alarmID
#define    SDK_REPORT_ALARM_CHIPTEMPERATURE		3	//alarmID
#define    SDK_REPORT_ALARM_VIDEOFUZZY			4	//alarmID
#define    SDK_REPORT_ALARM_VIDEOBLOCK			5	//alarmID
#define    SDK_REPORT_ALARM_EXTTTIGGER			6	//alarmID
#define    SDK_REPORT_ALARM_FLASH_CHECK_FAIL	7	//alarmID
#define    SDK_REPORT_PIC_INFO					0	//??????????????
#define	   SDK_REPORT_ALARM						2	//????Ó

#define IPC_SYSTEM_LOG      0 //?????
#define IPC_ALARM_LOG       1 //?Ó???
#define IPC_OPERATION_LOG   2  //???????
#define IPC_PARAM_FILE   3  //???????
/************************************************************************/
/* ????????????????                                                                     */
/************************************************************************/

#define IPC_GET_BASIC_PARAM				0x00000001
#define IPC_SET_BASIC_PARAM				0x00000002
#define IPC_GET_NETWORK_PARAM			0x00000003
#define IPC_SET_NETWORK_PARAM			0x00000004
#define IPC_GET_CAPTURE_PARAM			0x00000005
#define IPC_SET_CAPTURE_PARAM			0x00000006	
#define IPC_GET_SETTINGS_CAMERA_PARAM	0x00000007
#define IPC_SET_GETTINGS_CAMERA_PARAM	0x00000008
#define IPC_GET_SETTINGS_VIDEO_PARAM	0x00000009
#define IPC_SET_GETTINGS_VIDEO_PARAM	0x00000010
#define IPC_GET_IO_PARAM				0x00000011
#define IPC_SET_IO_PARAM				0x00000012
#define IPC_GET_SERIALPORT_PARAM		0x00000013
#define IPC_SET_SERIALPORT_PARAM		0x00000014

/*************************???????????? end*******************************/
 
typedef struct NET_SNAPCFG{// ????????????
	DWORD      dwSize;//?????§³
	BYTE       byRelatedDriveWay;//????IO????????????????¦¶[0,9](?????????????????????????????????§Ø??)
	unsigned char   bySnapTimes;//????????0-????????0-??????????????5??
	unsigned short       wSnapWaitTime;//??????????¦Ëms??????¦¶[0,60000](????????????????)
	unsigned short       wIntervalTime[MAX_INTERVAL_NUM];// ???????????¦Ëms??????¦¶[67,60000]
	BYTE       byRes2[24];//????
}NET_SNAPCFG, *LPNET_SNAPCFG;

//??????
typedef struct tagNET_VCA_RECT
{
	float fX;               //???????????X??????, 0.001~1
	float fY;               //???????????Y??????, 0.001~1
	float fWidth;           //???????, 0.001~1
	float fHeight;          //???????, 0.001~1
}NET_VCA_RECT,*LPNET_VCA_RECT;

//BASIC_PARAM
typedef struct
{ 
	char devicetype;
	char devicename[16];
	char DeviceSerial[24];
	char version[16];
	char Softwareversion[24]; 
	char Handwareversion[24]; 
	char Resoulution[16];
	unsigned char ioinput; 
	unsigned char iooutput;
	unsigned char channels;
}BASIC_PARAM;
// 	NETWORK_PARAM
typedef struct
{
	struct in_addr	ip; ///< IP address in static IP mode
	struct in_addr	netmask; ///< netmask in static IP mode
	struct in_addr	gateway; ///< gateway in static IP mode
	struct in_addr	dns; ///< DNS IP in static IP mode
	__u16		http_port; ///< HTTP port in web site.
	__u16		https_port; ///< HTTP port in web site.
	int			dhcp_enable; ///< current DHCP status.
	__u8		MAC[MAC_LENGTH]; ///< hardware MAC address
	__u8		multicast_enable; ///< multicast enable
} Network_Config_Data;


// CATTURE_PARAM
typedef struct
{
	unsigned short pointX;
	unsigned short pointY;
	unsigned short loopwidth;
	unsigned short loophight;
} Coil_Shape;//add by qinye

typedef struct{
	unsigned char Showloopflag;
	Coil_Shape CoilShape[3];
	unsigned short VideoWidth;
	unsigned short VideoHeight;
}Video_Capture;

typedef struct
{
	unsigned short pointX;
	unsigned short pointY;
	unsigned short loopwidth;
	unsigned short loophight;
} IdentifyArea;//add by qinye

typedef struct{
	unsigned char RePlateFlag;
	unsigned short Province;
	unsigned char TransferPictureFlag;
	unsigned char LaneNum;
	unsigned short PlateWidthMax;
	unsigned short PlateWidthMin;
	unsigned short Identifytype;
	IdentifyArea identifyarea[3];
}License_Plate_Recognition;//add by qinye


typedef struct Pic_Capture{
	unsigned short		CaptureMode;
	unsigned short		FirstDelay;
	unsigned char			GreenlightGain;
	unsigned int		GreenlightShutter;
	unsigned char			RedlightGain;
	unsigned int		RedlightShutter;
	unsigned short		PicRotation;
	unsigned short		LimitSpeed;
	unsigned short		CaptureSpeed;
	unsigned char			Norsheet;
	unsigned short		Norinterval[2];
	unsigned char			Redlightsheet;	
	unsigned short		RedLightinterval[2];	
	unsigned char			Speedsheet;	
	unsigned short		Speedinterval[2];	
	unsigned char			Manualsheet;	
	unsigned short		Manualinterval[2];	
	unsigned short		Manualwait;	
	unsigned char 		enableSync; 
	unsigned char		phase;	
	unsigned char 		signalFreq;
}Pic_Capture;//add by qinye


typedef struct{
	unsigned short    OverlayFlag;//bit0--OverlayEnable;  bit1--OverlayRoad;  bit2--OverlayTime;    bit3--OverlaySpeed;   bit4--OverlayRatio;  
	// bit5--OverlayPlate;  bit6--OverlayLane; bit7--OverlayLen;     bit8--OverlayColor;  bit9--OverlayIllegal;
	// bit10--OverlayMillisecond;  bit11--OverlayType;  bit12--OverlayRedlight;
	unsigned char  	RoadName[64];// road name 32 chinese character
}Image_Character_Overlay;//add by qinye

typedef struct{
	unsigned char PicUplaod;//a8
	unsigned char PicWidth;
	unsigned char PicHeight;
	unsigned char PicQuality;
}Pic_Property;//add by qinye

typedef struct CAPTURE_PARAM{
	char Separator;//a8
	Pic_Property picproperty;//vpss m3
	License_Plate_Recognition platerecognition;//dsp
	Pic_Capture piccapture;//vpss m3
	Image_Character_Overlay  imageoverlay;//vpss m3
	Video_Capture videocapture;//dsp
}CAPTURE_PARAM;//add by qinye

 
typedef struct
{
	unsigned char			dstampenable;					///< stream1 date stamp enable (ON/OFF)
	unsigned char			tstampenable;   				///< stream1 time stamp enable (ON/OFF)
	unsigned char			nLogoEnable;					///< stream1 logo enable (ON/OFF)
	unsigned char			nLogoPosition;   				///< stream1 logo position
	unsigned char			nTextEnable;					///< stream1 text enable (ON/OFF)
	unsigned char			nTextPosition;   				///< stream1 text position
	unsigned char			overlaytext[OSDTEXTLEN];		///< stream1 text
	unsigned char            nDetailInfo;
}OSD_config;
 
	
//IO_PARAM
typedef  struct {
		unsigned short function;	
		/**
		2 bit control 4 DI:
			bit0--bit1:DI0;bit2--bit3:DI1;bit4--bit5:DI2;bit6--bit7:DI3
		2 bit determine DI function:
			0 0:no enable;
			0 1:Red light status signal input;
			1 0:Trigger signal input;
			1 1:Retained;
		**/
		unsigned short triggerSignal;
		/**
		2 bit control 4 DI:
			bit0--bit1:DI0;bit2--bit3:DI1;bit4--bit5:DI2;bit6--bit7:DI3
		2 bit determine DI triggerSignal:
			0 0:Rising edge of the trigger;
			0 1:Falling edge trigger;
			1 0:Are triggered;
			1 1:Retained;
		**/
		unsigned char redLevel;
		/**
		1 bit control 4 DI:
			bit0:DI0;bit1:DI1;bit2:DI2;bit3:DI3
		1 bit determine DI redLevel:
			0:Low red light
			1:High indicates that the red light
		**/
} Gpio_Input_Config_Data;

typedef  struct {
	unsigned short functionout;
	/**
	2 bit control 4 DI:
	bit0--bit1:DI0;bit2--bit3:DI1;bit4--bit5:DI2;bit6--bit7:DI3
	2 bit determine DI function:
	0 0:Strobe light;
	0 1:The long Mingdeng default;
	1 0:Explosive flash light;
	1 1:Retained
	**/	
	unsigned char triggerLevel;//Output onset level
							  /**
							  1 bit control 4 DI:
							  bit0:DI0;bit1:DI1;bit2:DI2;bit3:DI3
							  1 bit determine DI triggerLevel:
							  0:Low;
							  1:High level default;
	**/
	unsigned short advanceTime[4];//The DI output ahead of time
	unsigned short triggerDuration[4];//The DI onset duration	
	unsigned char grayscale;//[0--250]
	unsigned char triggerenable;//Time control is enabled flash 0: Enable 1: Enable; default: 0 - 24-hour clock
	unsigned char startHour;
	unsigned char startMinute;	
	unsigned char endHour;		
	unsigned char endMinute;	
} Gpio_Output_Config_Data;
typedef  struct {
	Gpio_Input_Config_Data  inputio;
	Gpio_Output_Config_Data  outputio;
}IO_PARAM;


//SERIALPORT_PARAM
typedef struct
{ 
	int Baudrate;
	int Databits; 
	int Stopbit;
	int Paritybit; 
	int FlowControl; 
} RS485_CONFIG;

typedef struct
{
	int Baudrate;
	int Databits; 
	int Stopbit;
	int Paritybit; 
	int Parity; 
} RS232_CONFIG;

typedef struct
{ 
	RS485_CONFIG rs485;
	RS232_CONFIG rs232;

} SERIALPORT_PARAM;
//USER
typedef struct {
	char user[16];
	char passwd[16];
}USER;
  
typedef struct
{
	unsigned int ipRatio;
	unsigned char fIframe;
	unsigned char qpInit;
	unsigned char qpMin;
	unsigned char qpMax;
	unsigned char meConfig;
	unsigned char packetSize;
	unsigned char unkown1;
	unsigned char unkown2;
}CodecAdvParam;

typedef struct _ROI_Param{
	unsigned int startx;
	unsigned int starty;
	unsigned int width;
	unsigned int height;
	unsigned int type;
}ROI_Param;

typedef struct _CodecROIParam{
	unsigned int 		numROI;
	unsigned int     	prevwidth;
	unsigned int     	prevheight;
	ROI_Param	roi[3];
}CodecROIParam;


typedef struct {
	unsigned char Brightness;
	unsigned char Contrast;
	unsigned char Saturation;
	unsigned char Sharpness;
	unsigned char awb;
	unsigned char maxexposuretime;
	unsigned char maxgain;
	unsigned char img2a;
	unsigned char histogram;
	unsigned char vidstb1;
	unsigned char BackLight;
	unsigned char colorkiller;
	unsigned char blc;
	unsigned char Binning;
	unsigned char dynrange;
	unsigned char img2atype;
	unsigned char exposurectrl;
	unsigned char lensdistortcorrection;
	unsigned char tnfltctrl;
	unsigned char nfltctrl;
	unsigned char priority;
	int i_allowlen_outpoint;
	int i_allowlen_defect;
	int i_threshold;
}SETTINGS_CAMERA;

typedef struct{
	unsigned char Videocodec;
	unsigned char Videocodeccombo;
	unsigned char Videocodecres;
	int bitrate1;
	int bitrate2;
	unsigned char livequality;
	unsigned char FrameRate1;
	unsigned char FrameRate2;
	unsigned char FrameRate3;
	unsigned char RateControl1;
	unsigned char RateControl2;
	unsigned char mirror;
	OSD_config  videoosd[3];
}SETTINGS_VIDEO;

typedef struct {
	char date[16];
	char time[16];
}TIME;

typedef struct{
	USER user;
	TIME time;
	int logsize;
	int dwInterval;//???????
}OPERATION;
typedef struct tagALARMFLAG
{ 
	int alarmflag;//0-????? 1-???
	/************************************************************************/
	/*          Bit¦Ë	??????	6	5	4	3	2	1	0
				???	??????	?????????Ó	?????????????Ó	?????????????Ó	????????????Ó	??????IP???????Ó	??????????????Ó	????????                                                              */
	/************************************************************************/

}ALARMFLAG;
typedef struct tagIMAGEPARAM{
	int imageSize;
	char imageName[24];
}IMAGEPARAM;

typedef struct tagNET_TRANSPORTMESSAGE{
	char command;
	union{
		BASIC_PARAM basicparam;
		Network_Config_Data netparam;//???ftp???? ???
		CAPTURE_PARAM captureparam;   //??????
		SETTINGS_CAMERA setcamera;
		SETTINGS_VIDEO settvideo;
		IO_PARAM ioparam;
		SERIALPORT_PARAM serialportparam;
		OPERATION operation;
		ALARMFLAG alarmflag;//?Ó??????¦Ë ???
		//NET_DEVICEINFO deviceinfo;//??????BASIC_PARAM?????
		char *pSendBuf;//????????
	}uParam;
}TRANSPORTMESSAGE;

//????????????
typedef struct tagNET_SDK_PLATE_INFO
{
    BYTE  byPlateType;					//????????
    BYTE  byColor;						//???????
    BYTE  byBright;						//????????
    BYTE  byLicenseLen;					//???????????
    BYTE  byEntireBelieve;				//???????????????-100
    BYTE  byRes[35];					//????
    NET_VCA_RECT  struPlateRect;		//????¦Ë??
    char sLicense[MAX_LICENSE_LEN];		//???????
    BYTE byBelieve[MAX_LICENSE_LEN];	//??????????????????????????"??A12345", ??????,20,30,40,50,60,70??????"??"???????????????%??"A"???????????????%
}NET_SDK_PLATE_INFO, *LPNET_SDK_PLATE_INFO; 
//???????
typedef struct tagNET_SDK_VEHICLE_INFO_
{
    DWORD dwIndex;			//???????
    BYTE  byVehicleType;	//????????
    BYTE  byColorDepth;		//??????????
    BYTE  byColor;			//???????
    BYTE  byRes1;			//????
    WORD  wSpeed;			//??¦Ëkm/h
    WORD  wLength;			//??????????????
	BYTE  byIllegalType;    //0-????;1-????2-????3-????,4-?????
    BYTE  byRes2[3];		//????
	BYTE  byCustomInfo[16]; //????????
	BYTE  byRes3[16];	
}NET_SDK_VEHICLE_INFO, *LPNET_SDK_VEHICLE_INFO;

//????????
typedef struct tagNET_SDK_PLATE_RESULT
{
    DWORD   dwSize;							//??????
    BYTE	byResultType;					//0-??????????-????????
	BYTE    byChanIndex;					//?????
    BYTE    byRes1[2];						//????
    DWORD   dwRelativeTime;					//???????  
    BYTE    byAbsTime[32];					//????????,yyyymmddhhmmssxxx,e.g.20090810235959999??????
    DWORD   dwPicLen;						//??????
    DWORD	dwPicPlateLen;					//????§³??????
    DWORD   dwVideoLen;						//??????????
    BYTE	byTrafficLight;					//0-??????????1-????????2-???????
    BYTE    byPicNum;						//??????????
    BYTE	byDriveChan;					//??????????
    BYTE    byRes2;							//????
    DWORD   dwBinPicLen;					//????????
	DWORD   dwCarPicLen;					//?????????
	DWORD   dwFarCarPicLen;					//????????
	BYTE    *pBuffer3;						//???????
	BYTE    *pBuffer4;						//?????
	BYTE    *pBuffer5;						//????
	BYTE    byRes3[8];                      //???? 
    NET_SDK_PLATE_INFO  struPlateInfo;		//?????????
    NET_SDK_VEHICLE_INFO struVehicleInfo;   //???????
    BYTE	*pBuffer1;   		            //?????????????????????????????????????????????????????????????????????????????NULL(DVS?????????)
    BYTE    *pBuffer2;						//??????????????????????????DVS????????
}NET_SDK_PLATE_RESULT, *LPNET_SDK_PLATE_RESULT;
//?????????????????????????????????????????+????§³??

//?????õô???
typedef struct
{   
    BYTE byUserIDValid;                 //userid?????§¹ 0-??§¹??1-??§¹
    BYTE bySerialValid;                 //???§Ü??????§¹ 0-??§¹??1-??§¹ 
    BYTE byVersionValid;                //?·Ú???????§¹ 0-??§¹??1-??§¹ 
    BYTE byDeviceNameValid;             //?õô?????????§¹ 0-??§¹??1-??§¹ 
    BYTE byMacAddrValid;                //MAC????????§¹ 0-??§¹??1-??§¹     
    BYTE byLinkPortValid;               //login????????§¹ 0-??§¹??1-??§¹ 
    BYTE byDeviceIPValid;               //?õôIP?????§¹ 0-??§¹??1-??§¹ 
    BYTE bySocketIPValid;               //socket ip?????§¹ 0-??§¹??1-??§¹ 
    LONG lUserID;                       //NET_Login()?????, ???????§¹ 
    BYTE sSerialNumber[SERIALNO_LEN];	//???§Ü? 
    DWORD dwDeviceVersion;			    //?·Ú??? ??16¦Ë??????·Ú????16¦Ë?????·Ú
    char sDeviceName[NAME_LEN];		    //?õô???? 
    BYTE byMacAddr[MACADDR_LEN];		//MAC???     
    WORD wLinkPort;                     //link port 
    char sDeviceIP[128];    			//IP??? 
    char sSocketIP[128];    			//??????????????socket IP??? 
    BYTE byIpProtocol;                  //Ip§¿?? 0-IPV4, 1-IPV6 
    BYTE byRes2[11];
}NET_SDK_ALARMER, *LPNET_SDK_ALARMER;

//????????????
typedef struct
{
	LONG lChannel;		//?????
	LONG lLinkMode;		//???¦Ë(31)?0????????????1??????0??30¦Ë?????????????: 0??TCP???,1??UDP???,2???????,3 - RTP?????4-RTP/RTSP,5-RSTP/HTTP 
	HWND hPlayWnd;		//??????????,?NULL????????????
	char* sMultiCastIP;	//??????
}NET_SDK_CLIENTINFO, *LPNET_SDK_CLIENTINFO;

//??????
typedef struct 
{
	/*?????????????????VGA??????0=CIF, 1=QCIF, 2=D1????
	????????3=UXGA(1600x1200), 4=SVGA(800x600), 5=HD720p(1280x720),6=VGA,7=XVGA, 8=HD900p
	???????????????*/
	WORD	wPicSize;				/* ????????????????, 0-CIF??1-QCIF??2-D1??3-UXGA(1600x1200)??
									4-SVGA(800x600)??5-HD720p(1280x720)??6-VGA??7-XVGA??8-HD900p??
									9-HD1080??10-2560*1920??11-1600*304??12-2048*1536??
									13-2448*2048,,14-2448*1200??15-2448*800??
									16-XGA(1024*768)??17-SXGA(1280*1024),18-WD1(960*576/960*480),19-1080i*/
	WORD	wPicQuality;			/* ????????? 0-??? 1-??? 2-??? */
}NET_SDK_JPEGPARA, *LPNET_SDK_JPEGPARA;

//NET_Login()??????
typedef struct
{
    BYTE sSerialNumber[SERIALNO_LEN];	//???§Ü?
    BYTE byAlarmInPortNum;				//???????????
    BYTE byAlarmOutPortNum;				//???????????
    BYTE byDiskNum;						//??????
    BYTE byDVRType;						//?õô????, 1:DVR 2:ATM DVR 3:DVS ......
    BYTE byChanNum;						//??????????
    BYTE byStartChan;			        //????????,????DVS-1,DVR - 1
    BYTE byAudioChanNum;                //?????????
    BYTE byIPChanNum;					//??????????????  
	BYTE byZeroChanNum;					//???????????? //2010-01-16
	BYTE byMainProto;					//??????????§¿?????? 0-private, 1-rtsp
	BYTE bySubProto;					//??????????§¿??????0-private, 1-rtsp
    BYTE bySupport;						//??????¦Ë?????0?????????1???????
    BYTE bySupport1;					//??????????¦Ë?????0?????????1??????
    BYTE byRes1;
	WORD wDevType;						//?õô???
    BYTE byRes2[16];					//????    
}NET_SDK_DEVICEINFO, *LPNET_SDK_DEVICEINFO;

//?????????
typedef struct 
{
	DWORD dwDeviceStatic; 								//?õô????,0-????,1-CPU????????,????85%,2-???????,???¼??????
	BYTE  byAlarmInStatic[MAX_ALARMIN];					//??????????,0-??§Ò???,1-?§Ò???
	BYTE  byAlarmOutStatic[MAX_ALARMOUT];				//?????????????,0-??????,1-?§Ò??????
	DWORD  dwLocalDisplay;								//?????????,0-????,1-??????
    BYTE  byAudioChanStatus[MAX_AUDIO];					//?????????????? 0-¦Ä????1-?????, 0xff??§¹
    BYTE  byRes[10];
}NET_SDK_WORKSTATE, *LPNET_SDK_WORKSTATE;


//SDK?????(9000????)
typedef struct 
{
    DWORD dwTotalLoginNum;			//???login?????
    DWORD dwTotalRealPlayNum;		//???realplay¡¤??
    DWORD dwTotalPlayBackNum;		//???????????¡¤??
    DWORD dwTotalAlarmChanNum;		//??????????????¡¤??
    DWORD dwTotalFormatNum;			//??????????¡¤??
    DWORD dwTotalFileSearchNum;		//???????????????¡¤??
    DWORD dwTotalLogSearchNum;		//???????????????¡¤??
    DWORD dwTotalSerialNum;			//?????????¡¤??
    DWORD dwTotalUpgradeNum;		//???????¡¤??
    DWORD dwTotalVoiceComNum;		//??????????¡¤??
    DWORD dwTotalBroadCastNum;		//????????¡¤??
    DWORD dwTotalListenNum;			//??????????¡¤??
    DWORD dwEmailTestNum;			//??????????¡¤??
    DWORD dwBackupNum;				// ??????????¡¤??
	DWORD dwTotalInquestUploadNum;	//?????????¡¤??
    DWORD dwRes[6];
}NET_SDK_STATE, *LPNET_SDK_STATE;

//SDK??????????
typedef struct 
{
    DWORD dwMaxLoginNum;			//???login????? MAX_USERNUM
    DWORD dwMaxRealPlayNum;			//???realplay¡¤?? MAX_REALVIEW
    DWORD dwMaxPlayBackNum;			//??????????¡¤?? MAX_REALVIEW
    DWORD dwMaxAlarmChanNum;		//????????????¡¤?? MAX_ALARMNUM
    DWORD dwMaxFormatNum;			//??????????¡¤??  (????)
    DWORD dwMaxFileSearchNum;		//??????????¡¤??    (????)
    DWORD dwMaxLogSearchNum;		//??????????¡¤??    (????)
    DWORD dwMaxSerialNum;			//?????????¡¤?? 
    DWORD dwMaxUpgradeNum;			//???????¡¤?? 
    DWORD dwMaxVoiceComNum;			//??????????¡¤??    (????)
    DWORD dwMaxBroadCastNum;		//????????¡¤??    (????)
    DWORD dwRes[10];
}NET_SDKABL, *LPNET_SDKABL;

//TRANSPORTMESSAGE_RECV
 

typedef struct {
	unsigned short 			Flag;				//  bit0: 0: not snapshot picture,  1: snapshot picture
	//  bit1 ~ bit15: reserved
	unsigned short		RecordNum;		// come from "vehicle detector"
	unsigned char		PlateType;		// come from LPR module
	unsigned char		PlateColor;		// come from LPR
	unsigned char		PlateContent[16];	// come from LPR
	unsigned char		VehicleColor;		// come from LPR
	unsigned char		VehicleType;		// come from LPR
	unsigned char		VehicleLen;		// unit: m,  come from vehicle detector
	unsigned char		VehicleSpeed;		// unit: km/h, come from vehicle detector
	unsigned char		VehicleLaneNum;	// come from vehicle detector
	unsigned char		VehicleDirection;	// come from vehicle detector
	unsigned char		RedLightDuration;	// come from vehicle detector
	int				VehiclePassTime[7];	// added by "control logic module",  reference time struct 'tm'. here, I cann't reference "tm".
	// sec, min, hour, day, month, year, weekday
	unsigned char	LimitedSpeed;		// unit: km/h  , added by "control logic module"
	unsigned char	IllegalType;		// added by "control logic module"
	int			IllegalCode;		// added by "control logic module"
	int			RedLightStartTime[7];		// added by "control logic module"
}MSG_stPassVehicleInfo;

typedef struct{
	unsigned int picLen;	//
	unsigned char picName[40]; //????§³????
	unsigned char picBuf[700*1024]; //??????
}PICTURE;


typedef struct VehiclePassRec{
	
	char dataSource;//?????????D???????, E???????, F???????, H???????, I??????????, J???????Z????)
	char cameraIP[24];
	char deviceType;//01-???? 02-???????
	char captureNum;//??????
	MSG_stPassVehicleInfo   capMes;
	PICTURE picture[3];		
} VehiclePassRec ,*LPVehiclePassRec;

typedef struct{
	short  alarmID;
}Alarmmes;

typedef struct  tag_TRANSPORTMESSAGE_RECV{
	char command;
	union{
		 VehiclePassRec picInfo;//???????????
		 Alarmmes alarmMes; 
	}uParam;
	//int flag; // ?????? ????????? 0 ????????-1 ??????????????
}TRANSPORTMESSAGE_RECV;

 

//????
typedef void (CALLBACK *MSGCallBack0)(LONG lCommand,Alarmmes *pAlarmer,LPVehiclePassRec pAlarmInfo,DWORD dwBufLen,void* pUser);
typedef void (CALLBACK *fRealDataCallBack)(LONG lRealHandle,DWORD dwDataType,BYTE *pBuffer,DWORD dwBufSize,void *pUser);
typedef int  (CALLBACK *HeatBeatFun)(int);
typedef void (CALLBACK *fSerialDataCallBack)(LONG lSerialHandle,char *pRecvDataBuffer,DWORD dwBufSize,DWORD dwUser);

BOOL __stdcall NET_ManualSnap(LONG lUserID,LPNET_SNAPCFG lpInter,LPVehiclePassRec lpOuter);
BOOL __stdcall NET_ContinuousShoot(LONG lUserID, LPNET_SNAPCFG lpInter);
BOOL __stdcall NET_SetMessageCallBack(MSGCallBack0 fMessageCallBack,void *pUser);
BOOL __stdcall NET_MakeKeyFrame(LONG lUserID,DWORD lChannel);
LONG __stdcall NET_RealPlay(LONG lUserID,LPNET_SDK_CLIENTINFO lpClientInfo,fRealDataCallBack cbRealDataCallBack,void *pUser,BOOL bBlocked);
BOOL __stdcall NET_StopRealPlay(LONG lRealHandle);
BOOL __stdcall NET_SaveRealData(LONG lRealHandle,char *sFileName);
BOOL __stdcall NET_StopSaveRealData(LONG lRealHandle);
BOOL __stdcall NET_SetCapturePictureMode(DWORD dwCaptureMode);
BOOL __stdcall NET_CapturePicture(LONG lRealHandle,char *sPicFileName);
BOOL __stdcall NET_CaptureJPEGPicture(LONG lUserID,LONG lChannel,LPNET_SDK_JPEGPARA lpJpegPara,char *sPicFileName);
BOOL __stdcall NET_CaptureJPEGPicture_MEM(LONG lUserID,LONG lChannel,LPNET_SDK_JPEGPARA lpJpegPara,char *sJpegPicBuffer,DWORD dwPicSize,LPDWORD lpSizeReturned);
BOOL __stdcall NET_GetConfigFile(LONG lUserID,char *sFileName,char szType);
BOOL __stdcall NET_SetConfigFile(LONG lUserID,char *sFileName,char type);
BOOL __stdcall NET_SetLogSize(LONG lUserID,int type,int size);
INT  __stdcall NET_GetLogSize(LONG lUserID,int type);
BOOL __stdcall NET_ClearAlarm(LONG lUserID,int type);
BOOL __stdcall NET_ShieldAlarm(LONG lUserID,int type);
BOOL __stdcall NET_SetNetworkEnvironment(DWORD dwEnvironmentLevel);
LONG __stdcall NET_Upgrade(LONG lUserID, char *sFileName);
LONG __stdcall NET_GetUpgradeProgress(LONG lUpgradeHandle);
LONG __stdcall NET_GetUpgradeState(LONG lUpgradeHandle);
LONG __stdcall NET_GetUpgradeStep(LONG lUpgradeHandle,LONG *pSubProgress);
BOOL __stdcall NET_CloseUpgradeHandle(LONG lUpgradeHandle);
BOOL __stdcall NET_RebootIPC(LONG lUserID);
BOOL __stdcall NET_SetupAlarmChan(LONG lUserID,int type);
BOOL __stdcall NET_CloseAlarmChan(LONG lAlarmHandle);
BOOL __stdcall NET_RestoreConfig(LONG lUserID);
LONG __stdcall NET_Login(char *sIPCIP,WORD wIPCPort,char *sUserName,char *sPassword,LPNET_SDK_DEVICEINFO lpDeviceInfo);
BOOL __stdcall NET_Logout(LONG lUserID);
BOOL __stdcall NET_GetWorkState(LONG lUserID,LPNET_SDK_WORKSTATE lpWorkState);
LONG __stdcall NET_FormatDisk(LONG lUserID);
BOOL __stdcall NET_GetFormatProgress(LONG lFormatHandle,int *status);
BOOL __stdcall NET_CloseFormatHandle(LONG lFormatHandle);
LONG __stdcall NET_HeartBeat(LONG lUserID,char enable,HeatBeatFun heatbeatfun);
BOOL __stdcall NET_GetConfig(LONG lUserID,DWORD Command,VOID* OutBuffer,DWORD OutBufferSize,DWORD *BytesReturned);
BOOL __stdcall NET_SetConfig(LONG lUserID,DWORD Command,VOID* OutBuffer,DWORD OutBufferSize);
LONG __stdcall NET_SerialStart(LONG lUserID,LONG lSerialPort,fSerialDataCallBack cbSerialDataCallBack,DWORD dwUser);
BOOL __stdcall NET_SerialSend(LONG lSerialHandle,LONG lChannel,char *pSendBuf,DWORD dwBufSize);
BOOL __stdcall NET_SendToSerialPort(LONG lUserID,DWORD dwSerialPort,DWORD dwSerialIndex,char *pSendBuf,DWORD dwBufSize);
BOOL __stdcall NET_Init();
BOOL __stdcall NET_Cleanup();
BOOL __stdcall NET_SetConnectTime(DWORD dwWaitTime,DWORD dwTryNumber);
BOOL __stdcall NET_SetReconnect(DWORD dwInterval,BOOL bEnableRecon);
DWORD __stdcall NET_GetSDKVersion();
BOOL __stdcall NET_GetSDKState(LPNET_SDK_STATE *pSDKState);
BOOL __stdcall NET_GetSDKAbility(LPNET_SDKABL pSDKAbl);
BOOL __stdcall NET_GetLogToFile(LONG lUserID, int LogType,char * LogPath);
DWORD __stdcall NET_GetLastError();
BOOL __stdcall NET_GetErrorMsg(DWORD pErrorNo,char *szErrorMsg);
DWORD __stdcall NET_GetSDKBuildVersion();
BOOL  __stdcall NET_SetTime(LONG lUserID,char *ptr);
BOOL  __stdcall NET_SetDate(LONG lUserID,char *ptr);
BOOL  __stdcall NET_SetIPCWaiteTime(LONG lUserID,int waiteTime );
BOOL  __stdcall NET_SetIPCDefault(LONG lUserID);
BOOL  __stdcall NET_SetIPCImageDefault(LONG lUserID);
BOOL __stdcall NET_Recv(LONG lUserID);
LONG __stdcall NET_FormatUSB(LONG lUserID);
LONG __stdcall NET_SwitchFileSystem(LONG lUserID);
 
//////////////////////////////////////////////////////////////////////////

#endif